{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","admin/tests/helpers/ember-simple-auth.js","admin/tests/integration/components/available-timeslot-selector-test.js","admin/tests/integration/components/busy-modal-test.js","admin/tests/integration/components/checkbox-aria-test.js","admin/tests/integration/components/collapsible-panel-test.js","admin/tests/integration/components/db-checkbox-test.js","admin/tests/integration/components/dispatch-zone-autocomplete-test.js","admin/tests/integration/components/scheduler-mission-details-test.js","admin/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('admin/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _test) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n\n  const TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    const authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    const { __container__: container } = app;\n    const session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return app.testHelpers.wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    const session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return app.testHelpers.wait();\n  }\n});","define('admin/tests/integration/components/available-timeslot-selector-test', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | available-timeslot-selector', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"jem/jwCx\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"available-timeslot-selector\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), '');\n\n      // Template block usage:\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"ed7sUK7M\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"available-timeslot-selector\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define('admin/tests/integration/components/busy-modal-test', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | busy-modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"/eY7anxx\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"busy-modal\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), '');\n\n      // Template block usage:\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"5rb6a/+B\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"busy-modal\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define('admin/tests/integration/components/checkbox-aria-test', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | checkbox-aria', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n      assert.expect(2);\n\n      this.set('drone', new Ember.Object({ id: '1', name: 'test', drone_type: 'good_one' }));\n      this.set('label', 'test');\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"DuP2iGxG\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[26,\\\"checkbox-aria\\\",null,[[\\\"label\\\",\\\"model\\\",\\\"selections\\\",\\\"includeManufacturer\\\"],[[21,0,[\\\"label\\\"]],[21,0,[\\\"drone\\\"]],[22,[\\\"\\\"]],true]]],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), '');\n\n      this.render(Ember.HTMLBars.template({\n        \"id\": \"dTEQ1REY\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"checkbox-aria\\\",null,[[\\\"label\\\",\\\"model\\\",\\\"selections\\\",\\\"includeManufacturer\\\"],[[21,0,[\\\"label\\\"]],[21,0,[\\\"drone\\\"]],[22,[\\\"\\\"]],true]],{\\\"statements\\\":[[0,\\\"template block text\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define('admin/tests/integration/components/collapsible-panel-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('collapsible-panel', 'Integration | Component | collapsible-panel', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(2);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"78qAjIPt\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"collapsible-panel\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$().text().trim(), '');\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"anmIMo5u\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"collapsible-panel\\\",null,null,{\\\"statements\\\":[[0,\\\"  template block text\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('admin/tests/integration/components/db-checkbox-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('db-checkbox', 'Integration | Component | db-checkbox', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(2);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"slqAoQCD\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"db-checkbox\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$().text().trim(), '');\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"HMSFlI/N\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"db-checkbox\\\",null,null,{\\\"statements\\\":[[0,\\\"  template block text\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('admin/tests/integration/components/dispatch-zone-autocomplete-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('dispatch-zone-autocomplete', 'Integration | Component | dispatch-zone-autocomplete', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(2);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"j2T+jEuC\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"dispatch-zone-autocomplete\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$().text().trim(), '');\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"pPyT6Are\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"dispatch-zone-autocomplete\\\",null,null,{\\\"statements\\\":[[0,\\\"  template block text\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('admin/tests/integration/components/scheduler-mission-details-test', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | scheduler-mission-details', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"RGaERQye\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"scheduler-mission-details\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), '');\n\n      // Template block usage:\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"jKHJcmyE\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"scheduler-mission-details\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define('admin/tests/test-helper', ['admin/app', 'admin/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('admin/config/environment', [], function() {\n  var prefix = 'admin';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('admin/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}